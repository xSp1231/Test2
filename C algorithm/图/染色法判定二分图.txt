链接：
https://www.acwing.com/solution/content/105874/


#include<bits/stdc++.h>
#define int long long
using namespace std;
const int N=1e6+9;
int head[N],e[N],ne[N],idx;
void add(int a,int b) {
	e[idx]=b;
	ne[idx]=head[a];
	head[a]=idx++;
}
int color[N];
int dfs(int u,int c) { //节点 颜色；
	color[u]=c;//染色
	int i;
	for(i=head[u]; i!=-1; i=ne[i]) {
		int j=e[i];//遍历相邻的节点
		if(color[j]==0){ //节点未被染色
			if(dfs(j,3-c)==0) { //那么就将其染成不同的颜色； 出现矛盾 返回 0
				return 0;
			}
		}
		if(color[j]&&color[j]!=3-c) { //如果节点已经被染色 但是颜色却与相邻点颜色相同 那么矛盾
			return 0;
		}
	}
	return 1;
}
int n,m;
signed main() {
	memset(head,-1,sizeof(head));
	cin>>n>>m;
	int i,j;
	while(m--) {
		int a,b;
		cin>>a>>b;
		add(a,b),add(b,a);
	}
	for(i=1; i<=n; i++) {
		if(color[i]==0) { //如果这个点未被染色；
			if(dfs(i,1)==0) { //如果染色过程中出现矛盾  dfs(i,color)返回值为染色过程之中是否有矛盾
				cout<<"No"<<endl;
				return 0;
			}
		}
	}
	cout<<"Yes"<<endl;
	return 0;
}