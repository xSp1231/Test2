csdn:https://blog.csdn.net/weixin_51568389/article/details/125118391?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167271719716800180649530%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167271719716800180649530&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-125118391-null-null.142^v68^control,201^v4^add_ask,213^v2^t3_control1&utm_term=%E7%A7%AF%E6%9C%A8%E7%94%BB%E8%93%9D%E6%A1%A5%E6%9D%AF&spm=1018.2226.3001.4187


#include<bits/stdc++.h>
#define int long long
const int N=1e7+9,mod=1000000007;
using namespace std;
int dp[N][3];
signed main() {
	int n;
	cin>>n;
	int i;
	//dp[i][0]表示第i列摆放完全 并且第i+1列 没有多余积木
	//dp[i][1]表示第i列摆放完全 并且第i+1列 上面或者下面有一块多余积木
	//画图找规律
	 if(n==1){
	 	cout<<1<<endl;
	 	return 0;
	 }
	 if(n==2){
	 	cout<<2<<endl;
	 	return 0;
	 }
	for(i=3;i<=n;i++){
		dp[1][0]=1,dp[1][1]=2,dp[2][0]=2,dp[2][1]=4;
		dp[i][0]=(dp[i-1][0]%mod+dp[i-2][1]%mod+dp[i-2][0]%mod)%mod; 
		dp[i][1]=((dp[i-1][0]*2)%mod+dp[i-1][1]%mod)%mod;
	} 
	cout<<dp[n][0]%mod<<endl;
	return 0;
}
/*
#include<stdio.h>
#define mod 1000000007
long int a[10000001][2];
int main()
{
     int n;
    a[1][0]=1,a[2][0]=2,a[1][1]=2,a[2][1]=4;
    scanf("%d",&n);
    if(n==1)printf("1");
    else if(n==2)printf("2");
    else {
        for(int i=3;i<=n;i++){
            a[i][0]=(a[i-2][0]+a[i-2][1]+a[i-1][0])%mod;
            a[i][1]=(a[i-1][0]*2+a[i-1][1])%mod;
        }
        printf("%ld",a[n][0]%mod);
    }
    return 0;
}*/
