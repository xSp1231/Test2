#include<bits/stdc++.h>
#define int long long
const int N=1e6+9;
using namespace std;
int a[N],dp[N];
unordered_map<int,int>last;
signed main() {
	int n,m,x;
	cin>>n>>m>>x;
	int i;
	//枚举b的值 
	for(i=1; i<=n; i++) { //dp[i]表示在区间[1,i]之中 满足条件(a^b=x 假设a小 b大   a=b^x)的最大下界(即a的坐标)  循环枚举b
		cin>>a[i];
		last[a[i]]=i;//记录a[i]当前出现的最大的下标
	    // a[i]^x即求出 a 之后求出a当前阶段最后一次出现的坐标             //  a=b^x 
		if(last[a[i]^x]<1||last[a[i]^x]>i) { //如果算出来a的值的坐标小于1或者大于b (a[i])的坐标 那么就取dp[i-1]
			dp[i]=dp[i-1];
		}
		if(last[a[i]^x]>=1&&last[a[i]^x]<=i) { //在范围内 就取最大值
			dp[i]=max(dp[i-1],last[a[i]^x]);
		}
	}
	while(m--) {
		int l,r;
		cin>>l>>r;
		if(dp[r]<l) {
			cout<<"no"<<endl;
		} else {
			cout<<"yes"<<endl;
		}
	}
	return 0;
}