#include<bits/stdc++.h>
using namespace std;
const int N=1e2+9;
typedef pair<int,int> PII;
int row[N],col[N],flag=1;
int n;
int path[N][N];
int ans=0;
void dfs(int now) { //当前在now行
	if(now==n+1) {
		ans++;
		cout<<n<<"皇后方案"<<ans<<":"<<endl;
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=n; j++) {
				path[i][j]=0;
			}
			path[i][row[i]]=1;
		}
		for(int i=1; i<=n; i++) {
			for(int j=1; j<=n; j++) {
				cout<<path[i][j]<<" ";
			}
			cout<<endl;
		}
		
		return;
	} else {
		int i;
		for(i=1; i<=n; i++) {//遍历列
			if(col[i]==0) {
				flag=1;
				for(int j=1; j<now; j++) { //当前的位置 (now,i)  (j,row[j])
					if(abs(i-row[j])==abs(now-j)) {
						flag=0;
						break;
					}
				}
				if(flag==1) {
					col[i]=1;//第i列占满
					row[now]=i;
					dfs(now+1);
					col[i]=0;
				}
			}
		}
		return;
	}
}
int main() {
	cin>>n;
	dfs(1);
	cout<<ans<<endl;
	return 0;
}


