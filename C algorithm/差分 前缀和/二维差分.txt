acwing  差分矩阵


#include<bits/stdc++.h>
#define int long long
#define inf 99999999
using namespace std;
const int N=1e3+9;
int a[N][N],b[N][N];
void insert(int x1,int y1,int x2,int y2,int c) { //先假想a[][]先前全为0 那么b[][]数组先前也必定全为0；
	b[x1][y1]+=c;
	b[x2+1][y1]-=c;
	b[x1][y2+1]-=c;
	b[x2+1][y2+1]+=c;
}
signed main() {
	int n,m,q;
	cin>>n>>m>>q;
	int i,j;
	for(i=1; i<=n; i++) {
		for(j=1; j<=m; j++) {
			cin>>a[i][j];
			insert(i,j,i,j,a[i][j]);//这一步非常的重要 构造差分矩阵           // 假设原来的差分数组 原数组均全部为0  在以(i,j)为左上角 （i,j）为右下角的矩阵里面进行插入操作 相当于我们已经求出了二维差分矩阵
		}//原地插入一个数据
	}
	while(q--) {
		int x1,y1,x2,y2,c;
		cin>>x1>>y1>>x2>>y2>>c;
		insert(x1,y1,x2,y2,c);
	}
	for(i=1; i<=n; i++) {
		for(j=1; j<=m; j++) {
			a[i][j]=a[i][j-1]+a[i-1][j]-a[i-1][j-1]+b[i][j];//求前缀和
		}
	}
	for(i=1; i<=n; i++) {
		for(j=1; j<=m; j++) {
			cout<<a[i][j]<<" ";
		}
		cout<<endl;
	}
	return 0;
}
